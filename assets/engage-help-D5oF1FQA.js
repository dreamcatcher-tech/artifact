import{D as p,l as a,a as u,_ as g,b as s}from"./index-ZN_UBpcy.js";import{s as l}from"./io-hooks-5HwsB6Wu.js";const t=p("AI:engage-help"),o={description:"engage the help",type:"object",additionalProperties:!1,required:["help","text"],properties:{help:{description:"the path to the help",type:"string"},text:{description:"the text to pass to the help runner",type:"string"}}},h={engage:o,engageInBand:o,load:{description:"load the help",type:"object",additionalProperties:!1,required:["help"],properties:{help:{description:"the path to the help",type:"string"}}}},_={engageInBand:async({help:e,text:r})=>{t("engage:",e);const n=await a(e);t(n),u(typeof n.runner=="string",`no runner: ${n.runner}`),t("found runner:",n.runner);const{default:i}=await g(Object.assign({"../runners/runner-chat.js":()=>s(()=>import("./runner-chat-g6_4WQwN.js"),__vite__mapDeps([0,1,2,3])),"../runners/runner-injector.js":()=>s(()=>import("./runner-injector-9pRVsUuR.js"),__vite__mapDeps([4,1,2,0,3]))}),`../runners/${n.runner}.js`);return await i({path:e,text:r})},engage:async({help:e,text:r})=>{t("engage:",e);const{engageInBand:n}=await l("engage-help");return await n({help:e,text:r})},continue:async({help:e,text:r,commit:n})=>{t("continue:",e,n)},load:async({help:e})=>(t("load:",e),await a(e))};export{h as api,_ as functions};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["assets/runner-chat-g6_4WQwN.js","assets/index-ZN_UBpcy.js","assets/index-fD6NxQi6.css","assets/io-hooks-5HwsB6Wu.js","assets/runner-injector-9pRVsUuR.js"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
